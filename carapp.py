{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e18e9b7c-204f-4720-a202-b5c09bae0c88",
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing libraries\n",
    "import pickle\n",
    "import pandas as pd\n",
    "import streamlit as slt\n",
    "import numpy as np\n",
    "\n",
    "# page setting\n",
    "slt.set_page_config(layout=\"wide\")\n",
    "slt.header(':blue[Cardheko-Price Prediction ðŸš—]')\n",
    "\n",
    "# Load data\n",
    "df = pd.read_csv(\"C:/Users/hp/Desktop/car/final_model.csv\")\n",
    "print(df.columns)\n",
    "\n",
    "# Streamlit interface\n",
    "col1, col2 = slt.columns(2)\n",
    "with col1:\n",
    "    Ft = slt.selectbox(\"Fuel type\", ['Petrol', 'Diesel', 'Lpg', 'Cng', 'Electric'])\n",
    "\n",
    "    Bt = slt.selectbox(\"Body type\", ['Hatchback', 'SUV', 'Sedan', 'MUV', 'Coupe', 'Minivans',\n",
    "                                     'Convertibles', 'Hybrids', 'Wagon', 'Pickup Trucks'])\n",
    "    Tr = slt.selectbox(\"Transmission\", ['Manual', 'Automatic'])\n",
    "\n",
    "    Owner = slt.selectbox(\"Owner\", [0, 1, 2, 3, 4, 5])\n",
    "\n",
    "    Brand = slt.selectbox(\"Brand\", options=df['Brand'].unique())\n",
    "\n",
    "    filtered_models = df[(df['Brand'] == Brand) & (df['body type'] == Bt) & (df['Fuel type'] == Ft)]['model'].unique()\n",
    "\n",
    "\n",
    "    Model=slt.selectbox(\"Model\",options=filtered_models)\n",
    "\n",
    "    Model_year = slt.selectbox(\"Model Year\", options=sorted(df['modelYear'].unique()))\n",
    "    \n",
    "    \n",
    "    IV = slt.selectbox(\"Insurance Validity\", ['Third Party insurance', 'Comprehensive', 'Third Party',\n",
    "                                              'Zero Dep', '2', '1', 'Not Available'])\n",
    "    \n",
    "    Km = slt.slider(\"Kilometers Driven\", min_value=100, max_value=100000, step=1000)\n",
    "\n",
    "    ML = slt.number_input(\"Mileage\", min_value=5, max_value=50, step=1)  \n",
    "\n",
    "    seats = slt.selectbox(\"Seats\", options=sorted(df['Seats'].unique()))\n",
    "    \n",
    "    color = slt.selectbox(\"Color\", df['Color'].unique())\n",
    "\n",
    "    city = slt.selectbox(\"City\", options=df['City'].unique())\n",
    "\n",
    "with col2:\n",
    "    Submit = slt.button(\"Predict\")\n",
    "\n",
    "    if Submit:\n",
    "    \n",
    "       # load the model,scaler and encoder\n",
    "       with open('pipeline.pkl','rb') as files:\n",
    "        pipeline=pickle.load(files)\n",
    "\n",
    "        # input data\n",
    "        new_df=pd.DataFrame({\n",
    "        'Fuel type': Ft,\n",
    "        'body type':Bt,\n",
    "        'transmission':Tr,\n",
    "        'ownerNo':Owner,\n",
    "        'Brand':Brand,\n",
    "        \"model\":Model,\n",
    "        'modelYear':Model_year,\n",
    "        'Insurance Validity':IV,\n",
    "        'Kms Driven':Km,\n",
    "        'Mileage':ML,\n",
    "        'Seats':seats,\n",
    "        'Color':color,\n",
    "        'City': city},index=[0])\n",
    "        \n",
    "        # Display the selected details\n",
    "        data = [Ft, Bt, Tr, Owner,Brand, Model,Model_year, IV, Km, ML, seats, color, city]\n",
    "\n",
    "        slt.write(data)\n",
    "\n",
    "        # FINAL MODEL PREDICTION \n",
    "        prediction=pipeline.predict(new_df)\n",
    "        slt.write(f\"The price of the {new_df['Brand'].iloc[0]} car is: {round(prediction[0],2)} lakhs\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
